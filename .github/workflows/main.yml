name: Auto Decrypt SH Files

on:
  workflow_dispatch:

jobs:
  decrypt:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2️⃣ Install GPG & utils
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gnupg binutils

      # 3️⃣ Auto-detect & decrypt .sh files
      - name: Detect & Decrypt .sh
        shell: bash
        run: |
          set -e
          for f in $(find . -type f -name "*.sh"); do
            echo "[*] Checking $f ..."

            if grep -a "gpg -q --decrypt" "$f" >/dev/null; then
              echo "  [+] Detected: GPG Encrypted Loader"

              #  Extract skip lines (default 70 if not found)
              SKIP=$(grep -a -m1 "^skip=" "$f" | cut -d= -f2)
              [ -z "$SKIP" ] && SKIP=70

              # Extract passphrase (force text mode)
              PASS=$(strings "$f" | grep -oP "(?<=--passphrase ')[^']+" | head -n1)

              if [ -z "$PASS" ]; then
                echo "  [!] No passphrase found in $f"
                continue
              fi

              echo "    ↳ Using passphrase: ${PASS:0:6}... (hidden)"
              echo "    ↳ Skipping first $SKIP lines"

              # Extract encrypted payload with tail
              tail -n +$SKIP "$f" > "$f.encrypted"

              # Fallback: dd after exit 0
              if ! file "$f.encrypted" | grep -q "PGP"; then
                echo "    [~] tail method failed, trying dd fallback..."
                OFFSET=$(grep -an "^exit 0" "$f" | cut -d: -f1 | head -n1)
                if [ -n "$OFFSET" ]; then
                  dd if="$f" bs=1 skip=$((OFFSET*50)) of="$f.encrypted" 2>/dev/null || true
                fi
              fi

              # Try decrypt
              if gpg --batch --yes --passphrase "$PASS" -o "$f.dec" -d "$f.encrypted" 2>/dev/null; then
                echo "# Decrypted by GitHub Action" > "$f"
                cat "$f.dec" >> "$f"
                rm -f "$f.encrypted" "$f.dec"
                echo "  [✓] Decrypted $f"
              else
                echo "  [!] Failed to decrypt $f"
                head -n 20 "$f"
              fi
            fi
          done

      # 4️⃣ Commit & Push changes
      - name: Commit & Push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "Auto-decrypted .sh files" || echo "No changes"
          git push
